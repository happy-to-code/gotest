package main

import (
	"encoding/base64"
	"encoding/json"
	"fmt"
	"log"
)

type DockerContractInfo struct {
	Name    string
	Version string
	Content []byte
}

func main() {
	// input := []byte("hello world")
	//
	// // 演示base64编码
	// encodeString := base64.StdEncoding.EncodeToString(input)
	// fmt.Println("encodeString:", encodeString)

	var encodeString = []byte("eyJOYW1lIjoidGVzdDEiLCJDb250ZW50IjoiSDRzSUFBQUFBQUFBLzlSWWJXOFRTUkxtcStkWDlJNjBLdy9ydGNjT0JPRzc2QlJZZHNtSDNFWkU3TzBwc283eHVHM1BNdTd4OWJTQkNFVUtMSVNYT0MrM2VXR1RBSUU5T0NMdVNJTGdzb2tUeUk5Wjk5ajV4Rjg0ZGZkNFBCN25oZHVBZERjZk1rNU45VlBWWFU5WFZUZUJOb2xIYzlhUmovaW9xcXAycWlwL3EyM3ZlRWZuOFJOSDRoMG4xT01uRWgySlJPY1JOYTUySHVzOEF0U1A2VlRqS2RsRXcwZlVROXNLVHU3LzVJa2RsYm9hVCsxSnBmcDJ0UDVEMlpsYjhZU1NjMmZVdVYrcHZsMmdsV2s2TTFLL2U3MTJmYU82L1lDKytFbDhxcjkrNWxRbXE5dVBuV3NyNzdiS1FrakhadW55bWxDbWsyWG4zbHAxYTU3OWVQR1UzbDUxWmxhZHNlVmZoNjlMenN6cjZ2cHpNYVkyZjROT0w3T1JQNWJyMndzTTk5L1hha3VqOVA2U1VLdGZtNjR0TE81TXZhVWpONFVIdnc1ZkY1Ym9qMlhQeFozNUNlZmVHcDFZa1p6RnA4ekkwWmdVaXpuMy95VW02Q3c5ZGtZWHE1V1Iydkl3SFp1cHpkOXdYWjRab1pWNzFmVVhucVMyL0xnMk9TSVZOZjJpbG9PZ29CbElrb3hDMGNJRWhLV1FESkZ1WlF5VWkzMXZXMGlXUW5LMlFOakx0SExzWlJPc1craVNMRWtoT1dlUWZDa2QxYTFDakh5ZnRYVDNyMjVoR0wyVWlPbDV6V0JnTUdibmpZSjg4QUI0Q1NKbXE1Z0dlNmtXc1VVc3V3a3RTNG9reFdKMDhuYXQ4ZzluZHNONU5VT2YzS2hOanRDNUpZa01GaUhJYXloalFneXlKYVNIYlZKS0ErWk45SFFEb1orVTBqMklRSnpWZEJnQkdzN1pZQ0JsRTJ5Z25BS0s2ZWc1YUJjdFpNT21uZHJtbFBQd1J2WE5sTERRWDlBd09XMGhnaldkQUp2Z2trN0FWU25rV3U3VmlxQ2dGUWNFWk1xVlNrT1N4RndDQ0Y1dUFRZ3I0R2dyNGxVcHBPc2cyUVUrYTVGZkhXTHlxTTlLMXk1MnJrcWhrR3dnZy9SYWFjT0VjaEs0ajY1SG0rSUkwOUl4MUFoczFkUDFxRi9NOVhLUWRKdG1tNTVmelBYK1dvSjRNR0JXMTZNK3NUQ2IxMURPeFQ5dGxSQ1JrOXhzVU15Vk05Q0V1L2pvRjNNOVFTVnZzZzA5TG81SW9TRXBoQ0VwWVFSMG5VVWlGbk0zUjJ0a0JhQXZwS2V3aGpKQXJEQUFGOWdXU2NwcEpwUXZTS0ZlS3dQTjROY0NFN0t2ZmRqUUljaWFsa1k2RW8ydlJTWmtYMDlicG9XRFkzVW1GRjlMaUFBREVUNFI3eXRickFzZWs4SjZnRGtLNFBNOUZPdlpyRGxLOUkvd2NyaWhjbFdPcTlGNHRDTWFQMzRzZVZJOW1aQ0hJb0RnRWxSYzdYNklNaEF6MG9yQlgwUFNnMnlpSVIyR1czV2k3SFdHK3lsVXovZWZPUmNCTWl2aWNnUU1wTktEQklibHM5QTBMWEE2RDlHZk5VdFdGQytBZkY3OUpWMkh0aDFHaHFtSWVOTGJEK2l6VVZxZWRWTTl6K1FSdWpyaXBXVWhjbjdacEhjZjBkdXJPMU52cSt0M3BWaXNOdjNTeTdyTzFGajF6ZjM2OWh6TDV6eTd2TnNxMTZhWHFwWHgycXZOMnVZaTNScW16MGJyMjVQMXg2d2V2TnNxZTRacFpjb3JKOExXbm1GcWJzUkR4NnJBWVd5MjhnTXBnY2xTZ1B1TDh6Y0o1TFBudS85MHBrZU9BRTdaSkpCN05RSkJRcFVqZ05NMENZNnJxaHBWMVFqZ3hFd0NPVzFxK2tXWi9WOUNKQW5pcWpvVWFRZnVMaFpONk1NMWlua0x3ZS82bThCeE5ZaU1ZZVpBM0cvNityN3h3WjZMeDV1SUhXMnVscmdQK3lOKzIvT3RIL0c3emlaZ0lnaDRPVytRZ3hGdHJXQ1hVTTRIK3JWbWFsY0dRZmRKdXdsK0lnaWV3OXBnRy9hUUZESllERlVwbExVd01NRHZnUWxSMkkydXdpSWR5aFpJdEE4YmlKZ29MQnZBc0lFY0FZWWloVndTZE51bkJnbTBJK0F2RElubGpHaXZodTI4Wmpad0Jvd1VVMmVjaS9hVlNEL1IyRlp6cyt2bmJxbVA5aEJMQ3h0S0JMVEFLa0VQdWpNWkhzaFdiQU4wQVFOOER1TCtwTHZubmwyZ214Vm5kbFZzR3RaMzhkM3B6SzU2N1l2WVNiOWh2N3A5SFcvQjJEYTkrYkphK2VkNzdVNS9BVHowL2pTeVBKQk1TUUdmZElGT0hrci91cHpCMk1KaHVRZnBGc1pRSndDVkNtbUlnWlZsMEtVQ1JNU09nak5YaWxBbnJGaDB5Z3BiV3luRWE0a2I3VWJzK2pSc3c2OVl6ZUVtQnhLcENPaElLRktJRjQrQWNqZXhES0Yyak1WT0JKSXB0QktkYTZncGorYjgvM2pLWTdoYjRzTGNIOFVqT2xmclNIbE01eDR3djkrVHJZb1VJQ29IUEo1cTUrVnVMR3ZVa1RpckhhTGlMejZ0ci96c1p3QWozS01OWjJ6WjE3cXZWTmVIZTc3ODRnczMvSDlRM0dIbFczUjVQbEJMQkJsWnk4MTdkOUhFQzBvMmFlaXpLaXJFenEySlBhbm42NVUrT1BQaWgyWmV2TUc4UUFRaHhvSldwVFFyL0w1b3FZeFhScFpyZk5JRmtHSHU0UVRMTFAxRmxscXl6S0ZMbW1sa3dFVTRtQno0MUU3SmtRWUhGV1hQdEJJZ0JROTVmZndYT2pIcjNCbDI3dDhSSVlnY0hIQW12VE5XMnhwbTlIQ2oxd1Q0NkJUd3Q5VWZxanZ3OXIwdlFLY0crekRNR2xlOC9LOUlMZm05VVhvOGtJT0tpeUx0RjVpV3VGUzNsNTNwRFhkQloxWjNiazI4UjF6ZWJaWGRjYTE3VVFENEF4RllmL2NZZm0rTi92eVFWUmVmV1ZZWStNSGVmOVN2cnQrdGJpeXlvMzZidm10bHR5aUxVNytiWGpaRzZlUzRHT0lzdkhabVY1dUdoSWQ4dHU2cG53OTA2OXpFMytxdm4rMWRtWUpucEErZUpCS0hUaElKa1NRT0tEaHFzK0MwRm9KZGtraDgxK0kwSklVNEM4K2pRZ3NQUGJqUHZESWlma1RGb2FwTEZDSkpDaUY0dWZjd3BZaVZ3Q0JHWUJQSjU0c1pqYmVTM2t3T2Jvb2U3Y3c5YVhaRTc3TXYzREY3MUNqbjFkSzdyWGs2OGR6NWFhWDJiSE5uN3NsbEM1c1pXeVBRZjFIazFVVFJhVlhmUHFqZFdCTTNWUHRzTG1keDBoMitQdW84WEhOdXo5YUhienFMazlYS0FoMWZwQXVQcXV0amRHUk1rUHlBN2Zia0pSM2ZkSnU1d0N6MjJoSCtpNEQvM1lvcDJQTWxOSU9sY1Q4cTdGTWd6b3E3bm5BQmtyelZ1SjlRUU5pOUE0cUF0R1daL05DUWp3RHJJbU8xLytKb1FJeExlZmE1bHFCZkR6SUlvTXNQYStPcnpseWwvc01iOTZwdC9DbWQrTHRvc2ZmMGpJMDlNQWh0cTc1Zjk4WU95c0FXd216SjlIcTVIblRKdWdoL3U1OXM5SC92cVZnMmwwVytYUFZWQ2VuRXNGQTN5dlJwV0N0QUFyRWRGcDJQTHdCdGdWTit4Nzc1T0piblBna0Q3WjJPUno3UkhRa00yVjJSMnRJb3JVelFtMno2WXVJRnpVQmhUZ0tlQXVoSXVYN3JPVjJlcjI3Y0VXc2xoUnFORzE5Nm9tRVNicitkM0xXQk02MmN5SEhac016ZEFqWWJ6aWhmR0F4Y2tDYkJwK3c0RERIbVV4cVNQdmo5LzM4QUFBRC8veHJGbzJBVWpGd0FDQUFBLy8vUXRMMFNBQjRBQUE9PSIsIlZlcnNpb24iOiIxLjAifQ==")

	// 对上面的编码结果进行base64解码
	decodeBytes, err := base64.StdEncoding.DecodeString(string(encodeString))
	if err != nil {
		log.Fatalln(err)
	}
	fmt.Println("string(decodeBytes):", string(decodeBytes))

	fmt.Println("///////////////////////////////")

	// 反序列化
	var info DockerContractInfo
	if err := json.Unmarshal(decodeBytes, &info); err == nil {
		fmt.Println("struct DockerContractInfo:")
		fmt.Println(info)

		fmt.Println("--------------------")
		fmt.Println(info.Version)
		fmt.Println(info.Name)

	}

	//
	// // 如果要用在url中，需要使用URLEncoding
	// uEnc := base64.URLEncoding.EncodeToString([]byte(input))
	// fmt.Println(uEnc)
	//
	// uDec, err := base64.URLEncoding.DecodeString(uEnc)
	// if err != nil {
	// 	log.Fatalln(err)
	// }
	// fmt.Println("string(uDec):", string(uDec))
}

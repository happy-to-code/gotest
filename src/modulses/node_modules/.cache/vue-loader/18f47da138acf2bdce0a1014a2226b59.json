{"remainingRequest":"E:\\python\\hz\\mq-admin\\node_modules\\_vue-loader@15.9.6@vue-loader\\lib\\index.js??vue-loader-options!E:\\python\\hz\\mq-admin\\src\\views\\page\\index\\components\\WorkSite.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\python\\hz\\mq-admin\\src\\views\\page\\index\\components\\WorkSite.vue","mtime":1608694218898},{"path":"E:\\python\\hz\\mq-admin\\node_modules\\_cache-loader@2.0.1@cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\python\\hz\\mq-admin\\node_modules\\_babel-loader@8.2.2@babel-loader\\lib\\index.js","mtime":315532800000},{"path":"E:\\python\\hz\\mq-admin\\node_modules\\_cache-loader@2.0.1@cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\python\\hz\\mq-admin\\node_modules\\_vue-loader@15.9.6@vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport { designStyles, cdnHost, homeOptions } from '@/api/utils'\r\nimport { getWorkSiteIndexList } from '@/api/case'\r\nexport default {\r\n    data() {\r\n        return {\r\n            designStyles: designStyles,\r\n            data: [],\r\n            cdnHost: cdnHost,\r\n            navs: [],\r\n            nav: null\r\n        }\r\n    },\r\n    mounted() {\r\n      let interval = setInterval(() => {\r\n        if (!this.navs.length>0) {\r\n          this.navs = this.$store.getters.navs;\r\n        } else {\r\n          this.navs.forEach(e=>{\r\n            if(e.author == '/worksite'){\r\n              this.nav = e\r\n            }\r\n          })\r\n          clearInterval(interval);\r\n        }\r\n      }, 10);\r\n      this.getList()\r\n    },\r\n    methods: {\r\n        getList() {\r\n            this.data = []\r\n            getWorkSiteIndexList({ }).then(res => {\r\n                if (res.code === 200) {\r\n                    this.data = res.data\r\n                    if(this.data.length>0){\r\n                        this.$nextTick(()=>{\r\n\r\n                        })\r\n                    }\r\n                }\r\n            })\r\n        },\r\n        getType(value) {\r\n            let type = ''\r\n            homeOptions.forEach(element => {\r\n                if (element.value === value) {\r\n                    type = element.label\r\n                }\r\n            })\r\n            return type\r\n        },\r\n        getDesignStyle(value) {\r\n            let style = ''\r\n            designStyles.forEach(element => {\r\n                if (element.value === value) {\r\n                    style = element.label\r\n                }\r\n            })\r\n            return style\r\n        }\r\n    }\r\n}\r\n",null]}
{"remainingRequest":"E:\\python\\hz\\mq-admin\\node_modules\\_vue-loader@15.9.6@vue-loader\\lib\\index.js??vue-loader-options!E:\\python\\hz\\mq-admin\\src\\views\\case\\components\\CaseDetail.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\python\\hz\\mq-admin\\src\\views\\case\\components\\CaseDetail.vue","mtime":1609982081343},{"path":"E:\\python\\hz\\mq-admin\\node_modules\\_cache-loader@2.0.1@cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\python\\hz\\mq-admin\\node_modules\\_babel-loader@8.2.2@babel-loader\\lib\\index.js","mtime":315532800000},{"path":"E:\\python\\hz\\mq-admin\\node_modules\\_cache-loader@2.0.1@cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\python\\hz\\mq-admin\\node_modules\\_vue-loader@15.9.6@vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport { qiniuHost, cdnHost, homeOptions, caseAlbumTypes, designStyles } from '@/api/utils'\r\nimport { getToken, uploadFile, deleteFile } from '@/api/qiniu'\r\nimport { getTeamList } from '@/api/team.js'\r\nimport { createCase, getCase } from '@/api/case'\r\nimport moment from 'moment'\r\nexport default {\r\n  props: {\r\n    isEdit: {\r\n      type: Boolean,\r\n      default: false\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      cdnHost: cdnHost,\r\n      postForm: {\r\n        name: '',\r\n        type: '',\r\n        money: '',\r\n        pic: '',\r\n        is_home: false,\r\n        area: '',\r\n        content: '',\r\n        update_time: moment().format('YYYY-MM-DD HH:mm:ss'),\r\n        view_count: 0,\r\n        author: '舒适100装饰',\r\n        sort: 0,\r\n        is_case: 0,\r\n        case_status: 0,\r\n        design_style_id: '',\r\n        status: '',\r\n        designer: '',\r\n        manager: '',\r\n        albums: {}\r\n      },\r\n      rules: {\r\n        name: [\r\n          { required: true, message: '请填写名称', trigger: 'blur' }\r\n        ],\r\n        type: [\r\n          { required: true, message: '请选择户型', trigger: 'blur' }\r\n        ],\r\n        money: [\r\n          { required: true, message: '请填写造价', trigger: 'blur' }\r\n        ],\r\n        pic: [\r\n          { required: true, message: '请上传标题图片', trigger: 'blur' }\r\n        ],\r\n        area: [\r\n          { required: true, message: '请填写面积', trigger: 'blur' }\r\n        ],\r\n        content: [\r\n          { required: true, message: '请填写设计理念', trigger: 'blur' }\r\n        ],\r\n        view_count: [\r\n          { required: true, message: '请填写阅读数', trigger: 'blur' }\r\n        ],\r\n        author: [\r\n          { required: true, message: '请填写来源', trigger: 'blur' }\r\n        ],\r\n        sort: [\r\n          { required: true, message: '请填写排序', trigger: 'blur' }\r\n        ],\r\n        design_style_id: [\r\n          { required: true, message: '请选择设计风格', trigger: 'blur' }\r\n        ],\r\n        designer: [\r\n          { required: true, message: '请选择设计师', trigger: 'blur' }\r\n        ],\r\n        manager: [\r\n          { required: true, message: '请选择项目经理', trigger: 'blur' }\r\n        ],\r\n        update_time: [\r\n          { required: true, message: '请选择更新时间', trigger: 'blur' }\r\n        ]\r\n      },\r\n      homeOptions: homeOptions,\r\n      qiniuHost: qiniuHost,\r\n      loading: false,\r\n      designerOptions: [],\r\n      managerOptions: [],\r\n      caseAlbumTypes: caseAlbumTypes,\r\n      designStyles: designStyles,\r\n      preview_image: ''\r\n    }\r\n  },\r\n  created() {\r\n    if (this.isEdit) {\r\n      const id = this.$route.params && this.$route.params.id\r\n      getCase({ id: id }).then(res => {\r\n        if (res.code === 200) {\r\n          this.postForm = res.data\r\n          this.postForm.albums = {}\r\n          if (res.data.album && res.data.album.length > 0) {\r\n            res.data.album.forEach(element => {\r\n              if (!this.postForm.albums[element.type] || this.postForm.albums[element.type].length === 0) {\r\n                this.$set(this.postForm.albums, element.type, [])\r\n              }\r\n              this.postForm.albums[element.type].push({ name: element.url, url: cdnHost + element.url })\r\n            })\r\n           \r\n          }\r\n        } else {\r\n          this.$alert(res.msg, '提示', {\r\n            confirmButtonText: '我知道啦！',\r\n            type: 'warning'\r\n          })\r\n          this.returnToList()\r\n        }\r\n      })\r\n    }\r\n    // 加载团队成员\r\n    getTeamList().then(res => {\r\n      if (res.code === 200) {\r\n        res.data.forEach(element => {\r\n          if (element.type === 0) {\r\n            this.designerOptions.push({ id: element.id, name: element.name })\r\n          } else if (element.type === 2) {\r\n            this.managerOptions.push({ id: element.id, name: element.name })\r\n          }\r\n        })\r\n      }\r\n    })\r\n  },\r\n  methods: {\r\n    uploadPIC(request) {\r\n      getToken().then(data => {\r\n        var formData = new FormData()\r\n        formData.append('token', data.qiniu_token)\r\n        formData.append('key', 'Case/'+moment().format('x'))\r\n        formData.append('file', request.file)\r\n        uploadFile(formData).then(response => {\r\n          this.postForm.pic = response.key\r\n        })\r\n      })\r\n    },\r\n    exceed() {\r\n      this.$alert('请先删除已上传的照片！', '每个案例标题图只能上传一张哦！', {\r\n        confirmButtonText: '我知道啦！',\r\n        type: 'warning'\r\n      })\r\n    },\r\n    deletePic(pic) {\r\n      this.$confirm('此操作将永久删除该文件, 是否继续?', '提示', {\r\n        confirmButtonText: '确定',\r\n        cancelButtonText: '取消',\r\n        type: 'warning'\r\n      }).then(() => {\r\n        deleteFile({ key: pic }).then((res) => {\r\n          if (res.code === 200) {\r\n            this.$message({\r\n              type: 'success',\r\n              message: '删除成功!'\r\n            })\r\n            this.postForm.pic = ''\r\n            return true\r\n          } else {\r\n            this.$message({\r\n              type: 'error',\r\n              message: '删除失败!'\r\n            })\r\n            return false\r\n          }\r\n        })\r\n        return true\r\n      }).catch(() => {\r\n        return false\r\n      })\r\n      return false\r\n    },\r\n    uploadAlbum(request) {\r\n      let that = this\r\n      getToken().then(data => {\r\n        var formData = new FormData()\r\n        formData.append('token', data.qiniu_token)\r\n        formData.append('key', 'Case/'+moment().format('x'))\r\n        formData.append('file', request.file)\r\n        uploadFile(formData).then(response => {\r\n          if (!that.postForm.albums[request.data.type] || that.postForm.albums[request.data.type].length === 0) {\r\n            that.$set(that.postForm.albums, request.data.type, [])\r\n          }\r\n          that.postForm.albums[request.data.type].push({ name: response.key, url: cdnHost + response.key })\r\n          this.$forceUpdate();\r\n        })\r\n      })\r\n    },\r\n    deleteAlbumFile(file) {\r\n      this.$confirm('此操作将永久删除该文件, 是否继续?', '提示', {\r\n        confirmButtonText: '确定',\r\n        cancelButtonText: '取消',\r\n        type: 'warning'\r\n      }).then(() => {\r\n        for (var type in this.postForm.albums) {\r\n          this.postForm.albums[type].forEach((element, index) => {\r\n            if (element.name === file.name) {\r\n              deleteFile({ key: file.name }).then((res) => {\r\n                if (res.code === 200 || res.code === 612) {\r\n                  this.$message({\r\n                    type: 'success',\r\n                    message: '删除成功!'\r\n                  })\r\n                  this.postForm.albums[type].splice(index, 1)\r\n                } else {\r\n                  this.$message({\r\n                    type: 'error',\r\n                    message: '删除失败!'\r\n                  })\r\n                  return false\r\n                }\r\n              })\r\n            }\r\n          })\r\n        }\r\n        return true\r\n      }).catch(() => {\r\n        return false\r\n      })\r\n      return false\r\n    },\r\n    submitForm() {\r\n      this.postForm.status = 1\r\n      this.submit()\r\n    },\r\n    draftForm() {\r\n      this.postForm.status = 0\r\n      this.submit()\r\n    },\r\n    submit() {\r\n      this.$refs.postForm.validate(valid => {\r\n        if (valid) {\r\n          this.loading = true\r\n          createCase(this.postForm).then((res) => {\r\n            this.loading = false\r\n            if (res.code === 200) {\r\n              this.$notify({\r\n                title: '成功',\r\n                message: '案例操作成功',\r\n                type: 'success',\r\n                duration: 2000\r\n              })\r\n              if (this.isEdit) {\r\n                this.returnToList()\r\n                return\r\n              }\r\n              this.$refs['postForm'].resetFields()\r\n              for (var type in this.postForm.albums) {\r\n                this.$delete(this.postForm.albums, type)\r\n              }\r\n              this.postForm.update_time = moment().format('YYYY-MM-DD HH:mm:ss')\r\n            }\r\n          })\r\n        }\r\n      })\r\n    },\r\n    returnToList() {\r\n      this.$store.dispatch('tagsView/delView', this.$router.history.current).then(({ visitedViews }) => {\r\n        visitedViews.slice(-1)[0]\r\n        this.$router.push('/admin/case/list')\r\n      })\r\n    }\r\n  }\r\n}\r\n\r\n",null]}
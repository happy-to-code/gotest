{"remainingRequest":"E:\\python\\hz\\mq-admin\\node_modules\\_babel-loader@8.2.2@babel-loader\\lib\\index.js!E:\\python\\hz\\mq-admin\\node_modules\\_cache-loader@2.0.1@cache-loader\\dist\\cjs.js??ref--0-0!E:\\python\\hz\\mq-admin\\node_modules\\_vue-loader@15.9.6@vue-loader\\lib\\index.js??vue-loader-options!E:\\python\\hz\\mq-admin\\src\\views\\worksite\\components\\WorkSiteDetail.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\python\\hz\\mq-admin\\src\\views\\worksite\\components\\WorkSiteDetail.vue","mtime":1608694218919},{"path":"E:\\python\\hz\\mq-admin\\node_modules\\_cache-loader@2.0.1@cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\python\\hz\\mq-admin\\node_modules\\_babel-loader@8.2.2@babel-loader\\lib\\index.js","mtime":315532800000},{"path":"E:\\python\\hz\\mq-admin\\node_modules\\_cache-loader@2.0.1@cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\python\\hz\\mq-admin\\node_modules\\_vue-loader@15.9.6@vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/web.dom.iterable\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { qiniuHost, cdnHost, homeOptions, workSiteAlbumTypes, designStyles } from '@/api/utils';\nimport { getToken, uploadFile, deleteFile } from '@/api/qiniu';\nimport { getTeamList } from '@/api/team.js';\nimport { createCase, getCase } from '@/api/case';\nimport moment from 'moment';\nexport default {\n  props: {\n    isEdit: {\n      type: Boolean,\n      default: false\n    }\n  },\n  data: function data() {\n    return {\n      marks: {\n        1: '开工大吉',\n        2: '水电阶段',\n        3: '泥木阶段',\n        4: '油漆阶段',\n        5: '竣工'\n      },\n      postForm: {\n        name: '',\n        type: '',\n        money: '',\n        pic: '',\n        is_home: false,\n        area: '',\n        content: '',\n        update_time: moment().format('YYYY-MM-DD HH:mm:ss'),\n        view_count: 0,\n        author: '美侨装饰',\n        sort: 0,\n        is_case: 1,\n        case_status: 1,\n        design_style_id: '',\n        status: '',\n        designer: '',\n        manager: '',\n        albums: {}\n      },\n      rules: {\n        name: [{\n          required: true,\n          message: '请填写名称',\n          trigger: 'blur'\n        }],\n        type: [{\n          required: true,\n          message: '请选择户型',\n          trigger: 'blur'\n        }],\n        money: [{\n          required: true,\n          message: '请填写造价',\n          trigger: 'blur'\n        }],\n        pic: [{\n          required: true,\n          message: '请上传标题图片',\n          trigger: 'blur'\n        }],\n        area: [{\n          required: true,\n          message: '请填写面积',\n          trigger: 'blur'\n        }],\n        content: [{\n          required: true,\n          message: '请填写设计理念',\n          trigger: 'blur'\n        }],\n        view_count: [{\n          required: true,\n          message: '请填写阅读数',\n          trigger: 'blur'\n        }],\n        author: [{\n          required: true,\n          message: '请填写来源',\n          trigger: 'blur'\n        }],\n        sort: [{\n          required: true,\n          message: '请填写排序',\n          trigger: 'blur'\n        }],\n        design_style_id: [{\n          required: true,\n          message: '请选择设计风格',\n          trigger: 'blur'\n        }],\n        designer: [{\n          required: true,\n          message: '请选择设计师',\n          trigger: 'blur'\n        }],\n        manager: [{\n          required: true,\n          message: '请选择项目经理',\n          trigger: 'blur'\n        }],\n        update_time: [{\n          required: true,\n          message: '请选择更新时间',\n          trigger: 'blur'\n        }]\n      },\n      homeOptions: homeOptions,\n      qiniuHost: qiniuHost,\n      loading: false,\n      designerOptions: [],\n      managerOptions: [],\n      workSiteAlbumTypes: workSiteAlbumTypes,\n      designStyles: designStyles,\n      cdnHost: cdnHost,\n      preview_image: ''\n    };\n  },\n  created: function created() {\n    var _this = this;\n\n    if (this.isEdit) {\n      var id = this.$route.params && this.$route.params.id;\n      getCase({\n        id: id\n      }).then(function (res) {\n        if (res.code === 200) {\n          _this.postForm = res.data;\n          _this.postForm.albums = {};\n\n          if (res.data.album && res.data.album.length > 0) {\n            res.data.album.forEach(function (element) {\n              if (!_this.postForm.albums[element.type] || _this.postForm.albums[element.type].length === 0) {\n                _this.$set(_this.postForm.albums, element.type, []);\n              }\n\n              _this.postForm.albums[element.type].push({\n                name: element.url,\n                url: cdnHost + element.url\n              });\n            });\n          }\n        } else {\n          _this.$alert(res.msg, '提示！', {\n            confirmButtonText: '我知道啦！',\n            type: 'warning'\n          });\n        }\n      });\n    } // 加载团队成员\n\n\n    getTeamList().then(function (res) {\n      if (res.code === 200) {\n        res.data.forEach(function (element) {\n          if (element.type === 0) {\n            _this.designerOptions.push({\n              id: element.id,\n              name: element.name\n            });\n          } else if (element.type === 2) {\n            _this.managerOptions.push({\n              id: element.id,\n              name: element.name\n            });\n          }\n        });\n      }\n    });\n  },\n  methods: {\n    uploadPIC: function uploadPIC(request) {\n      var _this2 = this;\n\n      getToken().then(function (data) {\n        var formData = new FormData();\n        formData.append('token', data.qiniu_token);\n        formData.append('key', 'WorkSite/' + moment().format('x'));\n        formData.append('file', request.file);\n        uploadFile(formData).then(function (response) {\n          _this2.postForm.pic = response.key;\n        });\n      });\n    },\n    exceed: function exceed() {\n      this.$alert('请先删除已上传的照片！', '每个工地标题图只能上传一张哦！', {\n        confirmButtonText: '我知道啦！',\n        type: 'warning'\n      });\n    },\n    deletePic: function deletePic(file) {\n      var _this3 = this;\n\n      this.$confirm('此操作将永久删除该文件, 是否继续?', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(function () {\n        deleteFile({\n          key: file\n        }).then(function (res) {\n          if (res.code === 200 || res.code === 612) {\n            _this3.$message({\n              type: 'success',\n              message: '删除成功!'\n            });\n\n            _this3.postForm.pic = '';\n            return true;\n          } else {\n            _this3.$message({\n              type: 'error',\n              message: '删除失败!'\n            });\n\n            return false;\n          }\n        });\n        return true;\n      }).catch(function () {\n        return false;\n      });\n      return false;\n    },\n    uploadAlbum: function uploadAlbum(request) {\n      var _this4 = this;\n\n      getToken().then(function (data) {\n        var formData = new FormData();\n        formData.append('token', data.qiniu_token);\n        formData.append('key', 'WorkSite/' + moment().format('x'));\n        formData.append('file', request.file);\n        uploadFile(formData).then(function (response) {\n          if (!_this4.postForm.albums[request.data.type] || _this4.postForm.albums[request.data.type].length === 0) {\n            _this4.$set(_this4.postForm.albums, request.data.type, []);\n          }\n\n          _this4.postForm.albums[request.data.type].push({\n            name: response.key,\n            url: cdnHost + response.key\n          });\n\n          _this4.$forceUpdate();\n        });\n      });\n    },\n    deleteAlbumFile: function deleteAlbumFile(file) {\n      var _this5 = this;\n\n      this.$confirm('此操作将永久删除该文件, 是否继续?', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(function () {\n        for (var type in _this5.postForm.albums) {\n          _this5.postForm.albums[type].forEach(function (element, index) {\n            if (element.name === file.name) {\n              deleteFile({\n                key: file.name\n              }).then(function (res) {\n                if (res.code === 200 || res.code === 612) {\n                  _this5.$message({\n                    type: 'success',\n                    message: '删除成功!'\n                  });\n\n                  _this5.postForm.albums[type].splice(index, 1);\n                } else {\n                  _this5.$message({\n                    type: 'error',\n                    message: '删除失败!'\n                  });\n\n                  return false;\n                }\n              });\n            }\n          });\n        }\n\n        return true;\n      }).catch(function () {\n        return false;\n      });\n      return false;\n    },\n    submitForm: function submitForm() {\n      this.postForm.status = 1;\n      this.submit();\n    },\n    draftForm: function draftForm() {\n      this.postForm.status = 0;\n      this.submit();\n    },\n    submit: function submit() {\n      var _this6 = this;\n\n      this.$refs.postForm.validate(function (valid) {\n        if (valid) {\n          _this6.loading = true;\n          createCase(_this6.postForm).then(function (res) {\n            _this6.loading = false;\n\n            if (res.code === 200) {\n              _this6.$notify({\n                title: '成功',\n                message: '工地操作成功',\n                type: 'success',\n                duration: 2000\n              });\n\n              if (_this6.isEdit) {\n                _this6.returnToList();\n\n                return;\n              }\n\n              _this6.$refs['postForm'].resetFields();\n\n              for (var type in _this6.postForm.albums) {\n                _this6.$delete(_this6.postForm.albums, type);\n              }\n\n              _this6.postForm.update_time = moment().format('YYYY-MM-DD HH:mm:ss');\n            }\n          });\n        }\n      });\n    },\n    returnToList: function returnToList() {\n      var _this7 = this;\n\n      this.$store.dispatch('tagsView/delView', this.$router.history.current).then(function (_ref) {\n        var visitedViews = _ref.visitedViews;\n        visitedViews.slice(-1)[0];\n\n        _this7.$router.push('/admin/worksite/list');\n      });\n    }\n  }\n};",null]}